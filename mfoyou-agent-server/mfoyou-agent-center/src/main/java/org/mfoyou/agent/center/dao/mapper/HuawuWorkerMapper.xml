<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.mfoyou.agent.center.dao.inf.HuawuWorkerMapper">
  <resultMap id="BaseResultMap" type="org.mfoyou.agent.common.dao.domain.HuawuWorker">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="agent_id" jdbcType="INTEGER" property="agentId" />
    <result column="worker_phone" jdbcType="VARCHAR" property="workerPhone" />
    <result column="worker_address" jdbcType="VARCHAR" property="workerAddress" />
    <result column="worker_star" jdbcType="VARCHAR" property="workerStar" />
    <result column="worker_order_count" jdbcType="INTEGER" property="workerOrderCount" />
    <result column="worker_service_distance" jdbcType="INTEGER" property="workerServiceDistance" />
    <result column="worker_state" jdbcType="INTEGER" property="workerState" />
    <result column="worker_open_state" jdbcType="INTEGER" property="workerOpenState" />
    <result column="worker_long" jdbcType="DOUBLE" property="workerLong" />
    <result column="worker_lat" jdbcType="DOUBLE" property="workerLat" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="worker_third_auth" jdbcType="INTEGER" property="workerThirdAuth" />
    <result column="worker_fee" jdbcType="INTEGER" property="workerFee" />
    <result column="join_time" jdbcType="TIMESTAMP" property="joinTime" />
    <result column="station_id" jdbcType="INTEGER" property="stationId" />
  </resultMap>
  <resultMap id="BaseResultMap2" type="org.mfoyou.agent.common.entity.HuawuAgentWokerInfo" extends="BaseResultMap">
    <result column="goods_count" property="orderCountYesterDay" jdbcType="INTEGER" />
    <result column="total_amount" property="streamYesterday" jdbcType="INTEGER" />
    <result column="agent_admount" property="moneyYesterday" jdbcType="INTEGER" />
    <result column="getAmount" property="getAmount" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="BaseResultMapV3" type="org.mfoyou.agent.common.entity.HuawuAgentWorkerData" extends="BaseResultMap">
    <result column="todayOrderCount" property="todayOrderCount" jdbcType="INTEGER" />
    <result column="currentOrderCount" property="currentOrderCount" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, agent_id, worker_phone, worker_address, worker_star, worker_order_count, 
    worker_service_distance, worker_state, worker_open_state, worker_long, worker_lat, 
    create_time, modify_time, worker_third_auth, worker_fee,join_time,station_id
  </sql>
  <sql id="Base_Column_ListV2" >
    user_id, agent_id, worker_phone, worker_address, worker_star, worker_order_count, 
    worker_service_distance, worker_state, worker_open_state, worker_long, worker_lat, join_time,station_id,
    create_time, modify_time, worker_third_auth, worker_fee,goods_count,total_amount,agent_admount,getAmount,worker_fee
  	</sql>
  	<sql id="Base_Column_ListV3" >
  	user_id, agent_id, worker_phone, worker_address, worker_star, worker_order_count, station_id,
    worker_service_distance, worker_state, worker_open_state, worker_long, worker_lat, join_time,
    create_time, modify_time, worker_third_auth, worker_fee,todayOrderCount,currentOrderCount,money
  </sql>
  <select id="getWokerInfoByagentInfo" resultMap="BaseResultMap2">
	select <include refid="Base_Column_ListV2" />  from (select * from huawu_worker where 
	<choose>
		<when test="workerInfo.agentId != null">
			agent_id = #{workerInfo.agentId}
		</when>
		<when test="workerInfo.stationId != null">
			station_id = #{workerInfo.stationId}
		</when>
	</choose>
	<if test="workerInfo.workerPhone != null" >
      and worker_phone = #{workerInfo.workerPhone}
    </if>
    <if test="workerInfo.workerState != null" >
      	<choose>
			<when test="workerInfo.workerState == 1">
			 and user_id in (select user_id from huawu_idcard_info where state = 2)
			</when>
			<when test="workerInfo.workerState == 2">
			 and user_id in (select user_id from huawu_idcard_info where state = 5)
			</when>
			<when test="workerInfo.workerState == -1">
			 and worker_state = -1
			</when>
			<when test="workerInfo.workerState == 0">
			 and worker_state = 0
			</when>
			<otherwise>
			 and user_id not in (select user_id from huawu_idcard_info)
			</otherwise>
		</choose>
    </if>
    <if test="pageStart != null and pagesize !=null" >
      limit #{pageStart} , #{pagesize}
    </if>
	)  a left join 
	(select service_order_receive_user user_id,count(*) goods_count,sum(service_order_amount) total_amount ,
	<choose>
		<when test="workerInfo.agentId != null">
			sum(service_agent_amount)
		</when>
		<when test="workerInfo.stationId != null">
			sum(service_station_amount)
		</when>
	</choose>
	 agent_admount,sum(service_order_amount-service_admin_amount-service_agent_amount-service_station_amount) getAmount
	from huawu_service_order where service_order_effect_time between #{sdate} and #{edate} 
	and service_order_state between 50 and 610 group by user_id)  b  using(user_id) 
	</select> 
	 <select id="selectAgentByExample" resultMap="BaseResultMapV3" parameterType="org.mfoyou.agent.common.dao.domain.HuawuWorkerExample" >
    select 
    <include refid="Base_Column_ListV3" /> from 
    (select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from huawu_worker
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>) a left join (select 
	sum(service_order_amount) money,
	sum(case when service_order_state &lt; 500 then 1 else 0 end  ) currentOrderCount,
	count(1) todayOrderCount,
	service_order_receive_user user_id
 	from huawu_service_order where 
 	<choose>
 		<when test="userType == 1">
 			agent_id = #{userId} and
 		</when>
 		  <when test="userType == 0">
 		  station_id = #{userId} and
 		  </when>
 	</choose>
 	 service_order_receive_user is not null
	and to_days(service_order_effect_time) = to_days(now()) 
 	group by service_order_receive_user) b using (user_id)
  </select>
  <select id="selectByExample" parameterType="org.mfoyou.agent.common.dao.domain.HuawuWorkerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from huawu_worker
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from huawu_worker
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from huawu_worker
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.mfoyou.agent.common.dao.domain.HuawuWorkerExample">
    delete from huawu_worker
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.mfoyou.agent.common.dao.domain.HuawuWorker">
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into huawu_worker (agent_id, worker_phone, worker_address, 
      worker_star, worker_order_count, worker_service_distance, 
      worker_state, worker_open_state, worker_long, 
      worker_lat, create_time, modify_time, 
      worker_third_auth, worker_fee)
    values (#{agentId,jdbcType=INTEGER}, #{workerPhone,jdbcType=VARCHAR}, #{workerAddress,jdbcType=VARCHAR}, 
      #{workerStar,jdbcType=VARCHAR}, #{workerOrderCount,jdbcType=INTEGER}, #{workerServiceDistance,jdbcType=INTEGER}, 
      #{workerState,jdbcType=INTEGER}, #{workerOpenState,jdbcType=INTEGER}, #{workerLong,jdbcType=DOUBLE}, 
      #{workerLat,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{workerThirdAuth,jdbcType=INTEGER}, #{workerFee,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.mfoyou.agent.common.dao.domain.HuawuWorker">
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into huawu_worker
    <trim prefix="(" suffix=")" suffixOverrides=",">
    	<if test="userId != null">
        user_id,
      </if>
      <if test="agentId != null">
        agent_id,
      </if>
      <if test="workerPhone != null">
        worker_phone,
      </if>
      <if test="workerAddress != null">
        worker_address,
      </if>
      <if test="workerStar != null">
        worker_star,
      </if>
      <if test="workerOrderCount != null">
        worker_order_count,
      </if>
      <if test="workerServiceDistance != null">
        worker_service_distance,
      </if>
      <if test="workerState != null">
        worker_state,
      </if>
      <if test="workerOpenState != null">
        worker_open_state,
      </if>
      <if test="workerLong != null">
        worker_long,
      </if>
      <if test="workerLat != null">
        worker_lat,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="workerThirdAuth != null">
        worker_third_auth,
      </if>
      <if test="workerFee != null">
        worker_fee,
      </if>
      <if test="joinTime != null">
        join_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=INTEGER},
      </if>
      <if test="workerPhone != null">
        #{workerPhone,jdbcType=VARCHAR},
      </if>
      <if test="workerAddress != null">
        #{workerAddress,jdbcType=VARCHAR},
      </if>
      <if test="workerStar != null">
        #{workerStar,jdbcType=VARCHAR},
      </if>
      <if test="workerOrderCount != null">
        #{workerOrderCount,jdbcType=INTEGER},
      </if>
      <if test="workerServiceDistance != null">
        #{workerServiceDistance,jdbcType=INTEGER},
      </if>
      <if test="workerState != null">
        #{workerState,jdbcType=INTEGER},
      </if>
      <if test="workerOpenState != null">
        #{workerOpenState,jdbcType=INTEGER},
      </if>
      <if test="workerLong != null">
        #{workerLong,jdbcType=DOUBLE},
      </if>
      <if test="workerLat != null">
        #{workerLat,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="workerThirdAuth != null">
        #{workerThirdAuth,jdbcType=INTEGER},
      </if>
      <if test="workerFee != null">
        #{workerFee,jdbcType=INTEGER},
      </if>
      <if test="joinTime != null">
        #{joinTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.mfoyou.agent.common.dao.domain.HuawuWorkerExample" resultType="java.lang.Integer">
    select count(*) from huawu_worker
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update huawu_worker
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.agentId != null">
        agent_id = #{record.agentId,jdbcType=INTEGER},
      </if>
      <if test="record.workerPhone != null">
        worker_phone = #{record.workerPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.workerAddress != null">
        worker_address = #{record.workerAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.workerStar != null">
        worker_star = #{record.workerStar,jdbcType=VARCHAR},
      </if>
      <if test="record.workerOrderCount != null">
        worker_order_count = #{record.workerOrderCount,jdbcType=INTEGER},
      </if>
      <if test="record.workerServiceDistance != null">
        worker_service_distance = #{record.workerServiceDistance,jdbcType=INTEGER},
      </if>
      <if test="record.workerState != null">
        worker_state = #{record.workerState,jdbcType=INTEGER},
      </if>
      <if test="record.workerOpenState != null">
        worker_open_state = #{record.workerOpenState,jdbcType=INTEGER},
      </if>
      <if test="record.workerLong != null">
        worker_long = #{record.workerLong,jdbcType=DOUBLE},
      </if>
      <if test="record.workerLat != null">
        worker_lat = #{record.workerLat,jdbcType=DOUBLE},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.workerThirdAuth != null">
        worker_third_auth = #{record.workerThirdAuth,jdbcType=INTEGER},
      </if>
      <if test="record.workerFee != null">
        worker_fee = #{record.workerFee,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update huawu_worker
    set user_id = #{record.userId,jdbcType=INTEGER},
      agent_id = #{record.agentId,jdbcType=INTEGER},
      worker_phone = #{record.workerPhone,jdbcType=VARCHAR},
      worker_address = #{record.workerAddress,jdbcType=VARCHAR},
      worker_star = #{record.workerStar,jdbcType=VARCHAR},
      worker_order_count = #{record.workerOrderCount,jdbcType=INTEGER},
      worker_service_distance = #{record.workerServiceDistance,jdbcType=INTEGER},
      worker_state = #{record.workerState,jdbcType=INTEGER},
      worker_open_state = #{record.workerOpenState,jdbcType=INTEGER},
      worker_long = #{record.workerLong,jdbcType=DOUBLE},
      worker_lat = #{record.workerLat,jdbcType=DOUBLE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      worker_third_auth = #{record.workerThirdAuth,jdbcType=INTEGER},
      worker_fee = #{record.workerFee,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.mfoyou.agent.common.dao.domain.HuawuWorker">
    update huawu_worker
    <set>
      <if test="agentId != null">
        agent_id = #{agentId,jdbcType=INTEGER},
      </if>
      <if test="workerPhone != null">
        worker_phone = #{workerPhone,jdbcType=VARCHAR},
      </if>
      <if test="workerAddress != null">
        worker_address = #{workerAddress,jdbcType=VARCHAR},
      </if>
      <if test="workerStar != null">
        worker_star = #{workerStar,jdbcType=VARCHAR},
      </if>
      <if test="workerOrderCount != null">
        worker_order_count = #{workerOrderCount,jdbcType=INTEGER},
      </if>
      <if test="workerServiceDistance != null">
        worker_service_distance = #{workerServiceDistance,jdbcType=INTEGER},
      </if>
      <if test="workerState != null">
        worker_state = #{workerState,jdbcType=INTEGER},
      </if>
      <if test="workerOpenState != null">
        worker_open_state = #{workerOpenState,jdbcType=INTEGER},
      </if>
      <if test="workerLong != null">
        worker_long = #{workerLong,jdbcType=DOUBLE},
      </if>
      <if test="workerLat != null">
        worker_lat = #{workerLat,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="workerThirdAuth != null">
        worker_third_auth = #{workerThirdAuth,jdbcType=INTEGER},
      </if>
      <if test="workerFee != null">
        worker_fee = #{workerFee,jdbcType=INTEGER},
      </if>
      <if test="joinTime != null">
        join_time = #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stationId != null">
        station_id = #{stationId,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.mfoyou.agent.common.dao.domain.HuawuWorker">
    update huawu_worker
    set agent_id = #{agentId,jdbcType=INTEGER},
      worker_phone = #{workerPhone,jdbcType=VARCHAR},
      worker_address = #{workerAddress,jdbcType=VARCHAR},
      worker_star = #{workerStar,jdbcType=VARCHAR},
      worker_order_count = #{workerOrderCount,jdbcType=INTEGER},
      worker_service_distance = #{workerServiceDistance,jdbcType=INTEGER},
      worker_state = #{workerState,jdbcType=INTEGER},
      worker_open_state = #{workerOpenState,jdbcType=INTEGER},
      worker_long = #{workerLong,jdbcType=DOUBLE},
      worker_lat = #{workerLat,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      worker_third_auth = #{workerThirdAuth,jdbcType=INTEGER},
      worker_fee = #{workerFee,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>